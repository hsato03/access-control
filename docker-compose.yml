services:
  app-access:
    build: ./access
    container_name: app-access
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-access:5432/access
    depends_on:
      - db-access
    networks:
      - my-network
  app-credit:
    build: ./credit
    container_name: app-credit
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-credit:5432/credit
    depends_on:
      - db-credit
    networks:
      - my-network
  app-parking:
    build: ./parking
    container_name: app-parking
    ports:
      - "8082:8082"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-parking:5432/parking
    depends_on:
      - db-parking
    networks:
      - my-network
  app-user:
    build: ./user
    container_name: app-user
    ports:
      - "8083:8083"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-user:5432/user
    depends_on:
      - db-user
    networks:
      - my-network
  db-access:
    image: postgres:16
    container_name: db-access
    volumes:
      - ./data/access_postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: access
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    restart: "on-failure"
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d access'"]
      interval: 10s
      timeout: 3s
      retries: 5
    ports:
      - "5432:5432"
    networks:
      - my-network
  db-credit:
    image: postgres:16
    container_name: db-credit
    volumes:
      - ./data/credit_postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: credit
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    restart: "on-failure"
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d credit'"]
      interval: 10s
      timeout: 3s
      retries: 5
    ports:
      - "5433:5432"
    networks:
      - my-network
  db-parking:
    image: postgres:16
    container_name: db-parking
    volumes:
      - ./data/parking_postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: parking
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    restart: "on-failure"
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d parking'"]
      interval: 10s
      timeout: 3s
      retries: 5
    ports:
      - "5434:5432"
    networks:
      - my-network
  db-user:
    image: postgres:16
    container_name: db-user
    volumes:
      - ./data/user_postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: user
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    restart: "on-failure"
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d user'"]
      interval: 10s
      timeout: 3s
      retries: 5
    ports:
      - "5435:5432"
    networks:
      - my-network

networks:
  my-network: